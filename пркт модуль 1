# Представьте, что вам нужно создать программу,
# которая будет считать от 1 до 10 и выводить каждое число.
# Как только программа достигнет числа 10, она должна остановиться.
#
# Условие задачи: Нужно использовать цикл while,
# который будет увеличивать число (счетчик) до тех пор,
# пока не достигнет 10. Каждый раз программа должна выводить текущее значение счетчика.
#
# Как решить задачу:
#
# Создаем счетчик: Для начала нам нужно завести переменную, которая будет хранить текущее число.
# Это наш счетчик. Начнем с числа 1.
# Используем цикл while: Цикл while будет проверять, достиг ли счетчик 10.
# Пока это не так, программа продолжает выполнение.
# Выводим числа: Внутри цикла каждый раз нужно выводить текущее значение счетчика, чтобы видеть,
# как оно изменяется.
# Увеличиваем счетчик: Чтобы цикл не был бесконечным, нужно на каждом шаге увеличивать значение счетчика на 1.
#
# num = 1
# count = 0
# while count < 10:
#     print(f"{num}")
#     count += 1
#     num += 1
#################################################################################################

# Задание 2: Оператор break в цикле
#
# Теперь представьте, что вам нужно создать программу, которая будет выводить числа,
# пока пользователь не введет число больше 10. Как только это произойдет, программа должна остановиться.
#
# Условие задачи: Используйте цикл while, чтобы выводить числа, пока пользователь не введет число больше 10.
# Как только введенное число будет больше 10, цикл должен завершиться с помощью команды break.
#
# Как решить задачу:
#
# Создаем цикл: Цикл будет продолжаться, пока не произойдет прерывание с помощью break.
# Получаем число от пользователя: На каждом шаге программа будет запрашивать у пользователя ввод числа через input().
# Проверяем число: Если введенное число больше 10, используем команду break,
# чтобы завершить цикл. Это прерывает выполнение программы до окончания цикла.

# while True:
#     num = int(input("введите число: "))
#     if num > 10:
#         break
#################################################################################################

# Задание 3: Оператор continue в цикле
#
# Теперь представьте, что вам нужно создать программу, которая выводит числа от 1 до 10, но пропускает все четные числа.
#
# Условие задачи: Используйте цикл while,
# чтобы выводить числа от 1 до 10, но пропускайте четные числа с помощью команды continue.
#
# Как решить задачу:
#
# Создаем цикл while: Цикл будет работать до тех пор, пока счетчик не достигнет 10.
# Проверяем четность числа: Внутри цикла нужно проверить, является ли текущее число четным.
# Для этого используйте команду %, которая позволяет проверить остаток от деления на 2.
# Пропускаем четные числа:
# Если число четное, используем команду continue, чтобы пропустить его вывод и перейти к следующему числу.

# count = 0
# num = 1
# while count != 10:
#     if num % 2 == 1:
#         print(f"{num}")
#     count += 1
#     num += 1

# num = 1
# while num <= 10:
#     if num % 2 == 0:
#         num += 1
#         continue
#     print(f"{num}")
#     num += 1
#################################################################################################

# Задание 4: Бесконечный цикл и его завершение
#
# Теперь представьте, что программа должна работать бесконечно, запрашивая числа у пользователя, пока он не введет 0.
#
# Условие задачи: Создайте бесконечный цикл, который будет работать до тех пор
# пока пользователь не введет 0. После этого программа должна завершиться.
#
# Как решить задачу:
#
# Создаем бесконечный цикл: Чтобы программа продолжала работать до тех пор, пока мы не захотим ее остановить,
# используем цикл while, который всегда будет истинным: while True.
# Запрашиваем число у пользователя: Каждый раз программа будет запрашивать число у пользователя через input().
# Проверяем число: Если пользователь вводит 0, используйте команду break
# чтобы завершить бесконечный цикл и остановить программу.
#
# while True:
#     num = int(input("введите число: "))
#     if num == 0:
#         break
#################################################################################################
